name: Run Builds

on:
  workflow_call:
    inputs:
      build_type:
        description: 'A descriptive string of the configure options being build'
        required: true
        type: string
      configure_options:
        description: 'A set of configure options to set'
        required: true
        type: string
      runs_on_os:
        description: 'The OS to run on'
        required: true 
        type: string

jobs:
  build:
    continue-on-error: false
    strategy:
      fail-fast: true
    runs-on: ${{ inputs.runs_on_os }}
    container: 
      image: bhimesbhimes/cistem_build_env:v1.3
      options: --user root
    outputs:
      version: ${{ steps.configure.outputs.version }}
    steps:
    - uses: actions/checkout@v2
      # the macro for CISTEM_VERSION_TEXT needs access to the history.
      with:
        fetch-depth: 0
    - name: regenerate_project
      run: ./regenerate_project.b
    - name: configure
      env:
        CC: gcc
        CXX: g++
      run: |
        . /opt/intel/oneapi/setvars.sh
        mkdir -p build/${{ inputs.build_type }} 
        cd build/${{ inputs.build_type }} 
        echo $CC
        echo $CXX
        ../../configure  --enable-experimental ${{ inputs.configure_options }} --with-wx-config=wx-config  --enable-samples
        VERSION=$(cat config.log | grep CISTEM_VERSION_TEXT | cut -d' ' -f3 | tr -d '"')
        echo "::set-output name=version::$VERSION" 
    - uses: ammaraskar/gcc-problem-matcher@master
    - name: make 
      run: |
        scripts/cistem_make.sh build/${{ inputs.build_type }} 2
        cp scripts/testing/test_and_benchmark.sh build/${{ inputs.build_type }}/src/
    - name: clean up
      run: |
        cd build/${{ inputs.build_type }}
        rm -r src/core
        rm -r src/gui
        rm -r src/programs
    - name: Create binary artifact
      uses: actions/upload-artifact@v2
      with: 
        name: cistem_binaries_${{ inputs.build_type }}
        path: build/${{ inputs.build_type }}/src

    - name: Console test
      run: |
        . /opt/intel/oneapi/setvars.sh
        cd build/${{ inputs.build_type }}/src
        chmod +x *
        ./console_test 
        ./test_and_benchmark.sh ./
        
    # chmod is redundant, but to keep this independent of Console test we keep it.
    - name: Samples functional testing
      run: |
        . /opt/intel/oneapi/setvars.sh
        cd build/${{ inputs.build_type }}/src 
        chmod +x samples_functional_testing
        ./samples_functional_testing

    # chmod is redundant, but to keep this independent of Console test we keep it.
    - name: Unit tests
      run: |
        . /opt/intel/oneapi/setvars.sh
        cd build/${{ inputs.build_type }}/src 
        chmod +x unit_test_runner
        ./unit_test_runner
  