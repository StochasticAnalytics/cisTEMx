Bootstrap: docker
From: bhimesbhimes/cistem_build_env:base_image_v1.5.0
#Stage: spython-base

%setup 

mkdir -p ${SINGULARITY_ROOTFS}/cisTEMx
mkdir -p ${SINGULARITY_ROOTFS}/cisTEMx/scripts

%files

# copy the cisTEMx folder
/home/himesb/git/cisTEM/build/intel-gpu-profile/src /cisTEMx
# we'll use this to get information about the build environemnt, repo state and so on
/home/himesb/git/cisTEM/build/intel-gpu/config.log /cisTEMx
/home/himesb/git/cisTEM/scripts/testing/cistem_tests.sh /cisTEMx/scripts
/home/himesb/git/cisTEM/scripts/testing/* /cisTEMx/scripts
# /home/himesb/git/cisTEM/scripts/testing/beta_gal_benchmark /cisTEMx/scripts
# /home/himesb/git/cisTEM/scripts/testing/movie_align_benchmark /cisTEMx/scripts
# /sa_shared/cistem_reference_images /cisTEMx


%post -c /bin/bash

mv /cisTEMx/src /cisTEMx/bin
mv /cisTEMx/cistem_tests.sh /cisTEMx/bin


# Clean out some items we don't need in production
rm -rf /usr/local/cuda/nsight-systems-*
rm -rf /usr/local/cuda/nsight-compute-*



# Get reference images for testing and debugging
pip3 install gdown && cd /cisTEMx && gdown https://drive.google.com/drive/folders/1PO9tBU7lKqKUuSb8qdEPvlEk7xeektXv?usp --folder

# Google is limiting downloads, so have a local copy
chmod -R a+x /cisTEMx/* 



echo 'export MKLROOT=/opt/intel/oneapi/mkl/2021.4.0/' >>$APPTAINER_ENVIRONMENT
echo 'export NLSPATH=/opt/intel/oneapi/mkl/2021.4.0/lib/intel64/locale/%l_%t/%N' >>$APPTAINER_ENVIRONMENT
echo 'export CPATH=/opt/intel/oneapi/tbb/2021.4.0/env/../include:/opt/intel/oneapi/mkl/2021.4.0/include:/opt/intel/oneapi/compiler/2021.4.0/linux/include' >>$APPTAINER_ENVIRONMENT
echo 'export LIBRARY_PATH=/opt/intel/oneapi/tbb/2021.4.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mkl/2021.4.0/lib/intel64:/opt/intel/oneapi/compiler/2021.4.0/linux/compiler/lib/intel64_lin:/opt/intel/oneapi/compiler/2021.4.0/linux/lib' >>$APPTAINER_ENVIRONMENT
# NOTE: this also has the wx dynamic in it
echo 'export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/WX/intel-dynamic/lib:/usr/local/cuda/lib64:/opt/intel/oneapi/tbb/2021.4.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mkl/2021.4.0/lib/intel64:/opt/intel/oneapi/compiler/2021.4.0/linux/lib:/opt/intel/oneapi/compiler/2021.4.0/linux/lib/x64:/opt/intel/oneapi/compiler/2021.4.0/linux/lib/emu:/opt/intel/oneapi/compiler/2021.4.0/linux/compiler/lib/intel64_lin:/.singularity.d/libs' >>$APPTAINER_ENVIRONMENT
echo 'export PATH=/usr/local/cuda/bin:/cisTEMx/bin:${PATH}' >> $APPTAINER_ENVIRONMENT
echo 'export CISTEM_REF_IMAGES=/cisTEMx/cistem_reference_images' >> $APPTAINER_ENVIRONMENT



%environment

# export LANG=en_US.utf8
# export LD_RUN_PATH=/opt/libtorch/lib:${LD_RUN_PATH}

%runscript

# cd /home/cisTEMx
# exec /bin/bash "$@"

echo " -------------  Container details --------------- "
echo "Name: ${SINGULARITY_NAME}"
echo "Path: ${SINGULARITY_CONTAINER}"
echo "Bind: ${SINGULARITY_BIND}"
echo ""
awk '/CISTEM_CURRENT_BRANCH/{print "This container built from branch: "$3}' /cisTEMx/config.log
awk '/CISTEM_TIME_READABLE/{print  "on                              : "$3 $4"\""}' /cisTEMx/config.log
awk '/CISTEM_VERSION_TEXT/{print   "corresponding version info      : "$3}' /cisTEMx/config.log
echo " ------------------------------------------------ "
echo ""
if [ -z "$1" ]; then
    echo "No arguments supplied"
    echo "Usage: apptainer run --nv cisTEMx_<current_version>.sif [help|test|program name]"
    echo ""
    echo "  help: print this message"   
    echo "  test: run a test as listed below. You can get help on a specific test by running with  help test_name"
    echo "  program name: run a program in the container. You can get help on a specific program by running with  help program_name"
    exit 1
fi

if [ ! -z "$2" ]; then
    if [ ! $1 = "test" ] ; then
    echo "No arguments supplied"
    echo "Usage: apptainer run --nv cisTEMx_<current_version>.sif test [test name]"
    echo ""
    echo "  help: print this message"   
    echo "  test: run a test as listed below. You can get help on a specific test by running with  help test_name"
    echo "  program name: run a program in the container. You can get help on a specific program by running with  help program_name"
    exit 1
    fi
fi

if [ $1 = "help" ] ; then
    echo "Usage: apptainer run --nv cisTEMx_<current_version>.sif [help|test|program name]"
    echo ""
    echo  "\t note 1: you may also use singularity rather than apptainer"
    echo  "\t note 2: you must use the --nv flag to enable GPU support"
    echo  "\t note 3: you home directory, /tmp, and current directory will be available in the container.\n\t         any others may be included as -B /path/to/dir,/path/to/other/dir"
    echo ""
    echo  "Available programs:"
    echo ""
    echo  "\t cisTEM: run the cisTEM gui"
    echo  "\t simulate: generate a map from atomic coordinates"
    echo  "\t resize: resize an image stack or 3d volume"
    echo  "\t resample: change the pixel size (sampling rate) of a stack or 3d volume"
    echo  "\t sum_all_[mrc|tif]_files: generate gain and dark references from movie data"
    echo  "\t gpu_devices: list the available GPU devices and their properties"
    echo ""
    echo  "Available tests:"
    echo ""
    echo  "\t bgal: run the beta-galactosidase benchmark for 3d refinement"
    echo  "\t movies: run the movie alignment benchmark"
    echo  "\t unit: run tests to ensure the correct operation of underlying cistem libraries"
    echo  "\t intel_amd: run tests to ensure optimal code path is not blocked on AMD by Intel libraries"
    echo  "\t all: run all tests"

    exit 0
fi

case $1 in
    test)
        case $2 in 
            movies)
                if [ -z "$3" ]; then
                    echo "Using default number of processes: 3"
                    n_processes=3
                else
                    n_processes=$3
                fi
                if [ -z "$4" ]; then
                    echo "Using default number of threads: 1"
                    n_threads=1
                else
                    n_threads=$4
                fi
                echo "Running movie alignment benchmark"
                /bin/bash /cisTEMx/scripts/movie_align_benchmark/run_benchmark.sh $n_processes $n_threads
                ;;
            bgal)
                echo "Running beta galactosidase benchmark"
                /bin/bash /cisTEMx/scripts/beta_gal_benchmark/run_benchmark.sh
                ;;
            unit)
                echo "Running unit tests"
                /bin/bash /cisTEMx/scripts/cistem_tests.sh
                ;;
            intel_amd)
                if [ -z "$3" ]; then
                    echo "Using the default image size: 512"
                    image_size=512
                else
                    image_size=$3
                fi
                if [ -z "$4" ]; then
                    echo "Using the default number of images: 1,000,000"
                    n_images=1000000
                else
                    n_images=$4
                fi                
                if [ -z "$5" ]; then
                    echo "Using default number of threads: 8"
                    n_threads=8
                else
                    n_threads=$5
                fi
                echo "Running intel and amd tests"
                /bin/bash /cisTEMx/scripts/mkl_benchmark/run_benchmark.sh $image_size $n_images $n_threads
                ;;
            *)
                echo "Unknown argument"
                echo "Usage: apptainer run --nv cisTEMx_<current_version>.sif [bgal|unit]"
                exit 1
                ;;
        esac
        ;;
    cistem)
        /cisTEMx/bin/cisTEM
        ;;
    cisTEM)
        /cisTEMx/bin/cisTEM
        ;;
    simulate)
        /cisTEMx/bin/simulate
        ;;
    resize)
        /cisTEMx/bin/resize
        ;;
    resample)
        /cisTEMx/bin/resample
        ;;
    sum_all_mrc_files)
        /cisTEMx/bin/sum_all_mrc_files
        ;;
    sum_all_tif_files)  
        /cisTEMx/bin/sum_all_tif_files
        ;;
    gpu_devices)
        /cisTEMx/bin/gpu_devices
        ;;
    *)
        echo "Unknown argument"
        echo "Usage: apptainer run --nv cisTEMx_<current_version>.sif [help|test|program name]"
        exit 1
        ;;

esac


%startscript

# cd /home/cisTEMx
# exec /bin/bash "$@"
